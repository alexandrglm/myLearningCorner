WEBVTT

1
00:00:00.540 --> 00:00:02.500
<v ->Ahora que ya comprenden muy bien</v>

2
00:00:02.500 --> 00:00:05.640
qué se puede hacer
con el lenguaje Python

3
00:00:05.640 --> 00:00:08.480
y cómo se usa para desarrollar negocios

4
00:00:08.480 --> 00:00:11.110
y aplicaciones en el mundo real,

5
00:00:11.110 --> 00:00:15.210
quiero retroceder y hablar sobre la programación en general

6
00:00:15.210 --> 00:00:19.420
y hablar sobre qué hacemos cuando programamos una PC.

7
00:00:19.420 --> 00:00:22.520
Si les diera un conjunto de instrucciones...

8
00:00:22.520 --> 00:00:24.974
Digamos que quiero que vayan al mercado

9
00:00:24.974 --> 00:00:27.340
y quiero que compren algunas cosas.

10
00:00:27.340 --> 00:00:32.190
Quiero que compren leche

11
00:00:32.190 --> 00:00:36.550
y quiero que compren huevos.

12
00:00:36.550 --> 00:00:40.550
Lo que hice recién fue darles
un conjunto de instrucciones.

13
00:00:40.550 --> 00:00:43.660
Así, pueden seguir esas instrucciones

14
00:00:43.660 --> 00:00:45.450
y comprar esos artículos.

15
00:00:45.450 --> 00:00:48.401
Cuando programamos,
le damos instrucciones

16
00:00:48.401 --> 00:00:50.090
a la PC.

17
00:00:50.090 --> 00:00:55.090
Pero la PC no comprende nuestro lenguaje.

18
00:00:55.270 --> 00:00:59.030
Debemos dar un conjunto específico de instrucciones

19
00:00:59.030 --> 00:01:03.490
con una sintaxis que tenga sentido para ese sistema.

20
00:01:03.490 --> 00:01:06.850
No podemos simplemente decir:
"Ve a comprar leche y huevos".

21
00:01:06.850 --> 00:01:08.472
Debemos realizar una tarea,

22
00:01:08.472 --> 00:01:11.597
como escribir en un lenguaje

23
00:01:11.597 --> 00:01:13.898
que esa PC pueda interpretar

24
00:01:13.898 --> 00:01:16.920
y convertir en código procesable.

25
00:01:16.920 --> 00:01:20.913
Puedo decir algo como "print"

26
00:01:22.430 --> 00:01:25.653
y luego abrir paréntesis

27
00:01:26.690 --> 00:01:29.517
escribir "Hola, ¿qué tal?"

28
00:01:32.570 --> 00:01:35.970
y cerrar el paréntesis, entre comillas.

29
00:01:35.970 --> 00:01:39.830
Esto es verdadero código Python.

30
00:01:39.830 --> 00:01:42.100
El sistema tomará eso

31
00:01:42.100 --> 00:01:45.655
y lo compilará en un conjunto

32
00:01:45.655 --> 00:01:49.870
de unos y ceros.

33
00:01:49.870 --> 00:01:54.350
Así es como la PC puede procesarlo

34
00:01:54.350 --> 00:01:57.620
e imprimir la sentencia "Hola, ¿qué tal?".

35
00:01:57.620 --> 00:02:00.070
Ese es un ejemplo muy básico.

36
00:02:00.070 --> 00:02:02.610
Podemos complicarlo un poco más.

37
00:02:02.610 --> 00:02:05.850
Podemos hacer que ese sistema realice

38
00:02:05.850 --> 00:02:07.490
tareas bastante avanzadas.

39
00:02:07.490 --> 00:02:12.320
Podemos decir algo como "get"

40
00:02:12.320 --> 00:02:14.542
y, aquí dentro,

41
00:02:14.542 --> 00:02:19.190
podemos poner un enlace a una API.

42
00:02:19.190 --> 00:02:23.700
Esto es algo en Internet,
otra API que almacena datos.

43
00:02:23.700 --> 00:02:27.480
Y al usar estas instrucciones,
algo bastante básico,

44
00:02:27.480 --> 00:02:29.689
solo diciéndole que quiero
que busque tal cosa,

45
00:02:29.689 --> 00:02:32.680
el sistema irá, convertirá

46
00:02:32.680 --> 00:02:35.870
y realizará las mismas tareas,
como cuando realizamos

47
00:02:35.870 --> 00:02:38.940
esta declaración "print" muy sencilla.

48
00:02:38.940 --> 00:02:42.555
Pero al hacer uso
de los lenguajes como Python,

49
00:02:42.555 --> 00:02:45.300
podemos decirle que se comunique

50
00:02:45.300 --> 00:02:47.640
con un servidor totalmente distinto,

51
00:02:47.640 --> 00:02:49.430
que traiga los datos y así podremos

52
00:02:49.430 --> 00:02:51.780
renderizarla para nuestros usuarios.

53
00:02:51.780 --> 00:02:56.210
Estos son dos ejemplos
muy básicos de programación.

54
00:02:56.210 --> 00:02:59.330
En cada introducción

55
00:02:59.330 --> 00:03:01.300
para cada sección nueva de este curso

56
00:03:01.300 --> 00:03:04.550
quiero darles una comparación real

57
00:03:04.550 --> 00:03:07.430
para que tengan un marco

58
00:03:07.430 --> 00:03:09.160
para entender los conceptos.

59
00:03:09.160 --> 00:03:11.380
Porque si son nuevos en el desarrollo

60
00:03:11.380 --> 00:03:14.118
y quizá nunca hayan programado,

61
00:03:14.118 --> 00:03:18.450
quiero que puedan comprender esta clase de conceptos

62
00:03:18.450 --> 00:03:21.933
y comprender que cuando programamos

63
00:03:21.933 --> 00:03:25.447
escribimos nuestras instrucciones

64
00:03:25.447 --> 00:03:28.260
de un modo que la PC
pueda entenderlas.

65
00:03:28.260 --> 00:03:32.160
Quiero quitarle la magia
a la programación

66
00:03:32.160 --> 00:03:34.180
porque sé que puede parecer
bastante intimidatoria

67
00:03:34.180 --> 00:03:36.600
si nunca lo hicieron,
y puede parecer

68
00:03:36.600 --> 00:03:39.880
bastante complejo leer código,

69
00:03:39.880 --> 00:03:42.180
pero, en realidad,
lo único que hacemos

70
00:03:42.180 --> 00:03:45.437
es dar y formatear instrucciones

71
00:03:45.437 --> 00:03:48.300
de un modo que la PC pueda entenderlas

72
00:03:48.300 --> 00:03:51.293
para que pueda ejecutar ese programa.

