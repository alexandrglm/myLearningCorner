WEBVTT

1
00:00:01.000 --> 00:00:03.620
<v Jordan>En esta sección</v>
del curso analizaremos

2
00:00:03.620 --> 00:00:06.540
un diagrama muy importante

3
00:00:06.540 --> 00:00:09.110
que es el diagrama de despliegue.

4
00:00:09.110 --> 00:00:12.613
Y digo que es uno de los diagramas

5
00:00:12.613 --> 00:00:14.630
más importantes que verán

6
00:00:14.630 --> 00:00:19.630
porque muchas veces
al comenzar con un proyecto

7
00:00:19.740 --> 00:00:24.680
la primera tarea con la que necesitan que los ayude

8
00:00:24.680 --> 00:00:28.260
es decidir la arquitectura
para un sistema.

9
00:00:28.260 --> 00:00:32.400
Y exactamente eso hacen
los diagramas de despliegue.

10
00:00:32.400 --> 00:00:35.290
Bueno, comenzaremos esto explicando

11
00:00:35.290 --> 00:00:40.070
los seis elementos que componen un diagrama de despliegue.

12
00:00:40.070 --> 00:00:44.280
Y, en la próxima guía, veremos uno completo.

13
00:00:44.280 --> 00:00:46.093
Y será divertido

14
00:00:46.093 --> 00:00:48.423
porque es un diagrama
de despliegue que desarrollé

15
00:00:48.423 --> 00:00:50.989
para un aplicación real.

16
00:00:50.989 --> 00:00:52.940
Con suerte,
les resultará agradable

17
00:00:52.940 --> 00:00:55.790
y práctico cuando lo vean.

18
00:00:55.790 --> 00:01:00.410
Los elementos que lo componen
son nodos, componentes,

19
00:01:00.410 --> 00:01:05.410
artefactos, enlaces,
dependencias y asociaciones.

20
00:01:05.600 --> 00:01:08.850
El primer elemento es el nodo.

21
00:01:08.850 --> 00:01:12.700
El nodo es una de
las partes más importantes

22
00:01:12.700 --> 00:01:14.250
de todo el sistema.

23
00:01:14.250 --> 00:01:18.730
En esencia,
cada componente, cada parte

24
00:01:18.730 --> 00:01:21.850
de un diagrama de despliegue
es un nodo.

25
00:01:21.850 --> 00:01:26.110
Todo lo demás simplemente
agrega detalles a ese nodo

26
00:01:26.110 --> 00:01:29.530
o muestra cómo se relacionan
los nodos entre sí.

27
00:01:29.530 --> 00:01:34.530
Pero el nodo es el componente real propiamente dicho.

28
00:01:34.630 --> 00:01:37.855
Aquí hay un servidor web,

29
00:01:37.855 --> 00:01:40.521
que dentro de él tiene

30
00:01:40.521 --> 00:01:43.430
un sistema front-end Angular.

31
00:01:43.430 --> 00:01:47.288
Detallaremos todo lo interior en breve,

32
00:01:47.288 --> 00:01:49.220
pero por ahora, basta saber

33
00:01:49.220 --> 00:01:52.720
que un nodo
puede ser un servidor,

34
00:01:52.720 --> 00:01:57.042
una base de datos,
una API para conectarse,

35
00:01:57.042 --> 00:02:01.125
cualquier cosa
que tenga algún sistema

36
00:02:01.125 --> 00:02:03.380
con el que puedan comunicarse.

37
00:02:03.380 --> 00:02:05.630
Ahora nos enfocamos un poco

38
00:02:05.630 --> 00:02:07.720
y hablaremos
sobre los componentes.

39
00:02:07.720 --> 00:02:10.830
Hay un par de opciones
de sintaxis distintas

40
00:02:10.830 --> 00:02:14.105
para los componentes.
Aquí el componente es

41
00:02:14.105 --> 00:02:17.097
un rectángulo redondeado

42
00:02:17.097 --> 00:02:20.040
que almacena
el servicio web Angular.

43
00:02:20.040 --> 00:02:23.510
Entonces, un componente podría ser una aplicación,

44
00:02:23.510 --> 00:02:27.900
un servicio web, la misma API,

45
00:02:27.900 --> 00:02:31.620
una base de datos;
hay varias cosas

46
00:02:31.620 --> 00:02:33.520
que podría ser un componente.

47
00:02:33.520 --> 00:02:37.200
Normalmente es la parte del programa

48
00:02:37.200 --> 00:02:40.702
que gestiona la comunicación

49
00:02:40.702 --> 00:02:44.500
y la lógica del negocio,
o parte de esta,

50
00:02:44.500 --> 00:02:47.600
para el nodo en el que reside.

51
00:02:47.600 --> 00:02:50.200
Esa es un sintaxis.
También quiero mostrarles

52
00:02:50.200 --> 00:02:53.960
otra sintaxis y el motivo principal es porque,

53
00:02:53.960 --> 00:02:57.900
dependiendo del programa que usen,

54
00:02:57.900 --> 00:03:00.317
quizá tengan
un par de opciones distintas

55
00:03:00.317 --> 00:03:03.500
para mostrar
y visualizar componentes.

56
00:03:03.500 --> 00:03:07.350
La primera es un primer tipo de opción de componente

57
00:03:07.350 --> 00:03:10.310
que aparece si usan
la herramienta Lucidchart,

58
00:03:10.310 --> 00:03:14.730
como yo usé en este curso
y como uso a diario.

59
00:03:14.730 --> 00:03:18.380
Sin embargo,
si usan Enterprise Architect,

60
00:03:18.380 --> 00:03:21.710
los componentes dentro de
un diagrama de despliegue

61
00:03:21.710 --> 00:03:23.710
ser verán así.

62
00:03:23.710 --> 00:03:26.167
Se verá como el servidor web
de almacenamiento

63
00:03:26.167 --> 00:03:28.380
y como la aplicación.

64
00:03:28.380 --> 00:03:32.550
Ambas opciones son perfectamente válidas para usar.

65
00:03:32.550 --> 00:03:34.360
Recuerden que lo más importante

66
00:03:34.360 --> 00:03:38.095
al trabajar con UML
es no preocuparse

67
00:03:38.095 --> 00:03:42.820
por todos los detalles
y poner cada símbolo bien.

68
00:03:42.820 --> 00:03:46.780
Lo más crítico
es que puedan visualizar

69
00:03:46.780 --> 00:03:49.878
y representar su sistema
para que tenga sentido

70
00:03:49.878 --> 00:03:54.290
para ustedes y todos los demás
interesados del proyecto.

71
00:03:54.290 --> 00:03:58.290
Bajamos, y el siguiente
elemento es el artefacto.

72
00:03:58.290 --> 00:04:01.110
Seguimos con el nodo agrandado.

73
00:04:01.110 --> 00:04:04.000
Primero, mostramos
cómo se veía el nodo;

74
00:04:04.000 --> 00:04:06.675
luego, cómo se veía un componente

75
00:04:06.675 --> 00:04:08.260
dentro de un nodo;

76
00:04:08.260 --> 00:04:13.072
y ahora, veremos los elementos que componen esos componentes

77
00:04:13.072 --> 00:04:15.670
y que, además,
representan el nodo.

78
00:04:15.670 --> 00:04:19.700
Los artefactos
son los elementos rodeados

79
00:04:19.700 --> 00:04:22.567
por los símbolos de menos y mayor.

80
00:04:22.567 --> 00:04:27.280
En este caso, es el dispositivo y el servicio web Angular.

81
00:04:27.280 --> 00:04:28.820
Esos son los artefactos.

82
00:04:28.820 --> 00:04:32.458
Cuando analizo
un diagrama de despliegue

83
00:04:32.458 --> 00:04:37.410
y quiero ver qué servidor
tendré que desplegar

84
00:04:37.410 --> 00:04:41.900
o qué aplicación
tendré que configurar,

85
00:04:41.900 --> 00:04:44.300
estos son los elementos que miro.

86
00:04:44.300 --> 00:04:48.540
Aquí, podría mirar
el componente de abajo

87
00:04:48.540 --> 00:04:51.390
y saber que tengo que
montar los componentes

88
00:04:51.390 --> 00:04:54.060
en ese servidor
para que trabajen con Angular.

89
00:04:54.060 --> 00:04:57.330
Eso me dice que deberé
poder instalar Node,

90
00:04:57.330 --> 00:05:00.077
deberé instalar MPM

91
00:05:00.077 --> 00:05:02.650
y varias de esas dependencias.

92
00:05:02.650 --> 00:05:05.417
Si dijera "Servicio web Rails",

93
00:05:05.417 --> 00:05:10.340
tendría que instalar muchos otros componentes distintos.

94
00:05:10.340 --> 00:05:14.317
Pero este pequeño artefacto es muy descriptivo

95
00:05:14.317 --> 00:05:16.700
porque le dirá al arquitecto

96
00:05:16.700 --> 00:05:18.960
o a quien trabaje
sobre el sistema

97
00:05:18.960 --> 00:05:22.950
exactamente cómo
debe configurarse todo.

98
00:05:22.950 --> 00:05:26.070
También pueden ingresar otros parámetros,

99
00:05:26.070 --> 00:05:28.930
como verán aquí arriba de todo.

100
00:05:28.930 --> 00:05:31.680
Hay un artefacto
llamado "Dispositivo",

101
00:05:31.680 --> 00:05:34.455
seguido por dos puntos,

102
00:05:34.455 --> 00:05:36.690
seguido por "ServidorWeb",

103
00:05:36.690 --> 00:05:39.815
luego por la "Interfaz"
entre llaves,

104
00:05:39.815 --> 00:05:41.580
que es el SO Linux.

105
00:05:41.580 --> 00:05:43.430
Este es un modo formal

106
00:05:43.430 --> 00:05:46.950
de definir el tipo de servidor

107
00:05:46.950 --> 00:05:49.890
y el tipo de dispositivo en UML.

108
00:05:49.890 --> 00:05:53.110
Muchas veces los veo decir

109
00:05:53.110 --> 00:05:57.070
algo como "Servidor"
y luego, solo "Linux",

110
00:05:57.070 --> 00:06:00.030
y la versión de Ubuntu
que usarán.

111
00:06:00.030 --> 00:06:02.431
Personalmente,
eso no me importa mucho;

112
00:06:02.431 --> 00:06:06.664
sin embargo, cada parte de este curso,

113
00:06:06.664 --> 00:06:09.040
antes de filmarlo,

114
00:06:09.040 --> 00:06:11.840
la consulté con varios ingenieros de software

115
00:06:11.840 --> 00:06:15.090
para asegurarme de presentarla de un modo que se ajuste

116
00:06:15.090 --> 00:06:16.873
al estándar UML.

117
00:06:16.873 --> 00:06:19.920
Y una de las solicitudes
que me hicieron

118
00:06:19.920 --> 00:06:21.536
fue que les mostrara

119
00:06:21.536 --> 00:06:24.240
este tipo formal
de interfaz para nombrar.

120
00:06:24.240 --> 00:06:27.278
No es algo que me importaría
si trabajaran para mí.

121
00:06:27.278 --> 00:06:28.970
Sin embargo, quizá sí haya gente

122
00:06:28.970 --> 00:06:33.330
que le importe que su UML
se ajuste al estándar.

123
00:06:33.330 --> 00:06:36.160
Y así lo configurarían

124
00:06:36.160 --> 00:06:38.497
si quisieran mostrar
que el servidor

125
00:06:38.497 --> 00:06:42.010
tiene Linux
como sistema operativo.

126
00:06:42.010 --> 00:06:44.760
Seguimos, y tenemos los enlaces.

127
00:06:44.760 --> 00:06:49.760
Aquí tenemos todo el sistema que veremos en la demostración.

128
00:06:49.840 --> 00:06:52.210
No revisaremos todos los detalles.

129
00:06:52.210 --> 00:06:54.310
Para eso,
ahondaremos más adelante.

130
00:06:54.310 --> 00:06:56.810
Pero lo que sí hay,
y lo que sí quiero mostrarles,

131
00:06:56.810 --> 00:06:59.222
es que los enlaces
son esas líneas

132
00:06:59.222 --> 00:07:02.602
que conectan cada nodo:

133
00:07:02.602 --> 00:07:05.910
hay un enlace
desde el front-end Angular

134
00:07:05.910 --> 00:07:08.640
hasta el sistema de autenticación,

135
00:07:08.640 --> 00:07:12.190
hay un enlace entre
el front-end y la API Rails

136
00:07:12.190 --> 00:07:15.815
y hay un enlace entre la API

137
00:07:15.815 --> 00:07:18.140
y el sistema de autenticación.

138
00:07:18.140 --> 00:07:19.710
Esto es un modo de mostrar

139
00:07:19.710 --> 00:07:22.950
cómo está conectado
cada uno de los nodos.

140
00:07:22.950 --> 00:07:24.658
Lo siguiente en nuestra lista

141
00:07:24.658 --> 00:07:28.760
es un giro
en qué hacen los enlaces.

142
00:07:28.760 --> 00:07:31.740
Entonces, hay enlaces
que conectan los elementos,

143
00:07:31.740 --> 00:07:34.200
pero si queremos ser
más específicos,

144
00:07:34.200 --> 00:07:36.650
podemos agregar dependencias.

145
00:07:36.650 --> 00:07:38.970
Aquí, las dependencias están representadas

146
00:07:38.970 --> 00:07:41.955
por esa línea de puntos
con flechas

147
00:07:41.955 --> 00:07:46.676
y la flecha en dirección al nodo

148
00:07:46.676 --> 00:07:50.584
y muestra de cuáles otros nodos

149
00:07:50.584 --> 00:07:52.340
depende.

150
00:07:52.340 --> 00:07:55.760
Entraremos en muchos
más detalles cuando ahondemos

151
00:07:55.760 --> 00:07:59.960
y analicemos todo el sistema,
así que no haré eso ahora.

152
00:07:59.960 --> 00:08:02.888
Pero por ahora,
con un vistazo rápido,

153
00:08:02.888 --> 00:08:04.830
podrán mirar esto

154
00:08:04.830 --> 00:08:07.840
y entender que el front-end Angular

155
00:08:07.840 --> 00:08:09.731
depende del sistema de autenticación

156
00:08:09.731 --> 00:08:12.470
y también depende de la API.

157
00:08:12.470 --> 00:08:15.682
La API depende
del sistema de autenticación

158
00:08:15.682 --> 00:08:18.157
y eso se ve
simplemente sabiendo

159
00:08:18.157 --> 00:08:19.715
que es una línea de puntos

160
00:08:19.715 --> 00:08:24.630
con flechas que van
hacia cada uno de esos nodos.

161
00:08:24.630 --> 00:08:27.350
El último elemento del que hablaremos

162
00:08:27.350 --> 00:08:30.010
será el elemento asociación.

163
00:08:30.010 --> 00:08:34.130
El elemento asociación
es muy similar al enlace

164
00:08:34.130 --> 00:08:37.610
y también es similar
a la dependencia.

165
00:08:37.610 --> 00:08:40.740
Es un modo de conectar
todos los nodos

166
00:08:40.740 --> 00:08:43.130
y mostrar cómo están asociados.

167
00:08:43.130 --> 00:08:46.990
También pueden usar líneas
para poder designar eso.

168
00:08:46.990 --> 00:08:50.083
En este caso,
hay todo un sistema

169
00:08:50.083 --> 00:08:52.493
que representa cómo un usuario

170
00:08:52.493 --> 00:08:56.060
y cómo una API
pueden conectarse

171
00:08:56.060 --> 00:08:59.740
con una aplicación web que utiliza un balanceador de carga.

172
00:08:59.740 --> 00:09:02.502
No nos preocuparemos
por cómo trabajan estos,

173
00:09:02.502 --> 00:09:05.263
pero simplemente mirando todo este sistema,

174
00:09:05.263 --> 00:09:07.618
podrán darse cuenta de que un balanceador de carga

175
00:09:07.618 --> 00:09:10.401
acepta una solicitud de Internet

176
00:09:10.401 --> 00:09:12.520
y luego puede mapearla

177
00:09:12.520 --> 00:09:15.280
a varios servidores de aplicaciones.

178
00:09:15.280 --> 00:09:19.440
Cuando veo algo así,
me ayuda mucho

179
00:09:19.440 --> 00:09:22.330
entender cuál debe ser

180
00:09:22.330 --> 00:09:24.540
la estrategia de despliegue.

181
00:09:24.540 --> 00:09:27.230
Sabré que tendré que montar

182
00:09:27.230 --> 00:09:30.010
y clonar varios servidores de aplicaciones

183
00:09:30.010 --> 00:09:33.030
que se comunicarán
con grupos de bases de datos

184
00:09:33.030 --> 00:09:35.030
y que tendrá que haber
un balanceador de carga

185
00:09:35.030 --> 00:09:38.680
que pueda gestionar
todo el tráfico entrante

186
00:09:38.680 --> 00:09:40.580
y enviarlo al servidor.

187
00:09:40.580 --> 00:09:43.800
Así que deberé montar
varios elementos

188
00:09:43.800 --> 00:09:46.155
para los cuales
este diagrama de despliegue

189
00:09:46.155 --> 00:09:48.310
me da la receta.

190
00:09:48.310 --> 00:09:52.450
Ese es todo el conjunto de elementos básicos

191
00:09:52.450 --> 00:09:54.660
usados en diagramas de despliegue.

192
00:09:54.660 --> 00:09:57.560
En la próxima guía, ahondaremos

193
00:09:57.560 --> 00:10:00.053
en una situación real.

